% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{get_sector_normal}
\alias{get_sector_normal}
\title{Get sector profile}
\usage{
get_sector_normal(
  fitted,
  sector_value,
  sector_variable,
  target_variables,
  n_samples,
  max_times,
  n_cluster,
  debug = FALSE
)
}
\arguments{
\item{fitted}{Training type, discrete or continuous}

\item{sector_value}{Data for training}

\item{sector_variable}{Number of bayesian network layer}

\item{target_variables}{List of blacklist}

\item{n_samples}{List of whitelist}

\item{max_times}{Number of core for training}

\item{n_cluster}{Algorithms for learning network structure and parameters}

\item{debug}{Debug mode}

\item{number_bootstrap}{Number of bootstrap}
}
\value{
An profile of KPIs for specific sector
}
\description{
Get sector profile
}
\examples{
data_factor <- trained$data_factors
fitted <- trained$tabu$fitted
data <- preprocessed$data
n_cluster <- 4
sector_variable <- "NGANHKT"
all_variables <- c(preprocessed$continuous_dynamic_variables,
                   preprocessed$continuous_static_variables,
                   preprocessed$discrete_static_variables)

target_variables <- setdiff(all_variables, c(sector_variable))
sector_profiles <- list()
for(sector in data_factor[[sector_variable]]) {
  sector_id <- which(data_factor[[sector_variable]] \%in\% sector)

  sector_profiles[[sector]] <- tfdbn::get_sector_normal(fitted, sector_id, sector_variable, target_variables,
                                                        1000, 10, n_cluster)
}
}
